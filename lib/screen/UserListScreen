
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import '../models/connectedUser.dart';
import '../services/chatService.dart';
import '../controllers/userController.dart';
import '../screen/chatScreen.dart';

class UserListScreen extends StatefulWidget {
  @override
  _UserListScreenState createState() => _UserListScreenState();
}

class _UserListScreenState extends State<UserListScreen> {
  final ChatService _chatService = ChatService();
  final UserController _userController = Get.find<UserController>();
  List<ConnectedUser> connectedUsers = [];
  bool isLoading = true;

  @override
  void initState() {
    super.initState();

    String loggedInUsername = _userController.currentUserName.value;
    _chatService.connect(loggedInUsername);

    // Escuchar usuarios conectados
    _chatService.onConnectedUsers((data) {
      if (!mounted) return;
      setState(() {
        connectedUsers = data
            .map<ConnectedUser>((user) => ConnectedUser.fromJson(user))
            .toSet()
            .toList(); // Evitar duplicados
      });
    });

    setState(() {
      isLoading = false;
    });
  }

  @override
  void dispose() {
    _chatService.disconnect();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Usuarios Conectados'),
      ),
      body: isLoading
          ? Center(child: CircularProgressIndicator())
          : connectedUsers.isEmpty
              ? Center(child: Text('No hay usuarios conectados'))
              : ListView.builder(
                  itemCount: connectedUsers.length,
                  itemBuilder: (context, index) {
                    final user = connectedUsers[index];
                    return ListTile(
                      title: Text(user.username),
                      onTap: () {
                        String senderId = _userController.currentUserName.value;
                        String receiverId = user.username;
                        String chatId = '${senderId}_$receiverId';
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                            builder: (context) => ChatScreen(
                              chatId: chatId,
                              senderId: senderId,
                              receiverId: receiverId,
                            ),
                          ),
                        );
                      },
                    );
                  },
                ),
    );
  }
}